# coding: utf-8import sysdef team_sql_format(team_id="", user_id=None, search_flg=True):    select_sql = '''       select         prof.team_id        ,info.admin        ,prof.team_name        ,prof.team_image        ,prof.prefecture_id        ,prefecture.prefecture_name        ,prof.city_id        ,city.city_name        ,prof.line_id        ,station.line_name        ,prof.station_id        ,station.station_name        ,prof.avg_age        ,prof.gym        ,prof.solicitation_flg        ,prof.stray_flg        ,prof.main_place        ,prof.member_num        ,prof.gender        ,prof.c_comment        ,prof.u_comment        ,j.status as join_status    '''    from_sql = '''        from team_profile as prof        INNER JOIN team_info as info ON prof.team_id = info.team_id    '''    if user_id and search_flg:        from_sql += ' AND info.user_id != "{}" '.format(user_id)    from_sql += '''        INNER JOIN station_master as station         ON         station.prefecture_id = prof.prefecture_id        AND station.line_id = prof.line_id        AND station.station_id = prof.station_id        INNER JOIN city_master as city ON city.city_id = prof.city_id        INNER JOIN prefectures_master as prefecture ON prefecture.prefecture_id = prof.prefecture_id        INNER JOIN t_feature as f ON f.team_id = prof.team_id        LEFT OUTER JOIN t_game_date as g        ON        prof.team_id = g.team_id        INNER JOIN t_purpose as p        ON        prof.team_id = p.team_id            '''    from_sql += '''        LEFT OUTER JOIN jointy_info as j            ON j.team_id = prof.team_id    '''    if user_id and search_flg:        from_sql += ' AND j.user_id = "{}" '.format(user_id)    return select_sql, from_sqldef search_team_format(team_id=None, prefecture_id=None, city_id=None, station_id=None,                       line_id=None, gender=None, purpose_list=None, week_list=None,                       date_list=None, user_id=None):    flag = False    sql = ''    if team_id:    #     sql += ' where (cha.send_team_id = "' + team_id + '" or cha.res_team_id = "' + team_id + '")'         sql += ' and prof.team_id != "{}" '.format(team_id)    if prefecture_id:        sql += ' and ' if flag else ' where '        sql += ' prof.prefecture_id = "{}"'.format(prefecture_id)        flag = True    if city_id:        sql += ' and ' if flag else ' where '        sql += ' prof.city_id = "{}"'.format(city_id)        flag = True    if station_id:        sql += ' and ' if flag else ' where '        sql += ' prof.station_id = "{}"'.format(station_id)        flag = True    if line_id:        sql += ' and ' if flag else ' where '        sql += ' prof.line_id = "{}"'.format(line_id)        flag = True    if gender:        if type(gender) is str or type(gender) is int:            sql += ' and ' if flag else ' where '            sql += ' prof.gender = "{}"'.format(str(gender))            flag = True        else:            for row in gender:                sql += ' and ' if flag else ' where '                sql += ' prof.gender = {}'.format(str(row))                flag = True    if purpose_list is not None and len(purpose_list) > 0:        for row in purpose_list:            sql += ' and ' if flag else ' where '            sql += ' p.purpose_id = {}'.format(str(row))            flag = True    if week_list:        w_cnt = 0        t_sql = ''        for key, val in week_list.items():            if len(val) > 0:                if w_cnt == 0:                    t_sql += ' and ( ' if flag else ' where ( '                else:                    t_sql += ' or '                t_sql += ' ( week_id = {} and '.format(key)                t_cnt = 0                for v in val:                    t_sql += ' or time_id = {} '.format(v) if t_cnt > 0 else ' ( time_id = {} '.format(v)                    t_cnt += 1                if t_cnt > 0:                    t_sql += ' )) '                    flag = True                    w_cnt += 1        if w_cnt > 0:            sql += t_sql + ' ) '    if user_id:        sql += ' and ' if flag else ' where '        sql += ' info.user_id = "{}"'.format(user_id)        flag = True    if date_list:        sql += ' and ( ' if flag else ' where ( '        pre = None        for row in date_list:            if pre is not None:                sql += ' or '            sql += ' g.game_date = "{}" '.format(row[0:10])            pre = row[0:10]        if pre is not None:            sql += ')'    return sqldef team_format(team_list):    f = ' A.team_id = "{}"'    w_sql = ''    for row in team_list:        team = row.to_dict_team_info()        if len(w_sql) > 0:            w_sql += ' or ' + f.format(team['team_id'])        else:            w_sql = f.format(team['team_id'])    return w_sqldef challenge_team_format(team_list):    tmp = []    for row in team_list:        team = row.to_dict_team_info()        if team['res_team_id'] is not None and team['res_team_id'] not in tmp:            tmp.append(team['res_team_id'])        if team['send_team_id'] is not None and team['send_team_id'] not in tmp:            tmp.append(team['send_team_id'])    f = ' ( "' + '","'.join(tmp) + '" ) '    return fdef set_challenge_chat():    return set_chat_logdef get_challenge_chat():    return get_chat_logget_user_prof = '''    SELECT        up.user_id,        up.user_name,        up.prefecture_id,        pre.prefecture_name,        up.city_id,        up.icon,        city.city_name,        up.line_id,        station.line_name,        up.station_id,        station.station_name,        up.birth_dt,        up.gender,        up.ex_year,        up.comment,        up.height,        ex.width_id,        po.position_id    FROM        user_info as up    LEFT JOIN        station_master as station    ON station.station_id = up.station_id    AND station.line_id = up.line_id    INNER JOIN        prefectures_master as pre    ON         pre.prefecture_id = up.prefecture_id    INNER JOIN        city_master as city    ON         city.city_id = up.city_id    INNER JOIN        u_ex_width as ex    ON         ex.user_id = up.user_id    INNER JOIN        u_position as po    ON         po.user_id = up.user_id    WHERE        up.user_id = %(user_id)s    '''check_user = '''    SELECT         u.owner_num        ,count(admin) as count    FROM user_info as u    LEFT JOIN team_info as t    ON t.user_id = u.user_id    AND t.admin = 1    WHERE    u.user_id = %(user_id)s'''set_team_info = '''    INSERT INTO team_info (        team_id         ,user_id        ,admin        ,register_dt        ,update_time    )    VALUES (        %(team_id)s         ,%(user_id)s        ,%(admin)s        ,%(register_dt)s        ,%(update_time)s    ) ON DUPLICATE KEY UPDATE         admin = %(user_id)s        ,update_time = %(update_time)s'''set_team_prof = ''' INSERT INTO team_profile (         team_id        ,team_name        ,team_image        ,prefecture_id        ,city_id        ,line_id        ,station_id        ,gender        ,gym        ,avg_age        ,solicitation_flg        ,stray_flg        ,main_place        ,member_num        ,c_comment        ,u_comment        ,register_dt        ,update_time    ) VALUES (        %(team_id)s        ,%(team_name)s        ,%(team_image)s        ,%(prefecture_id)s        ,%(city_id)s        ,%(line_id)s        ,%(station_id)s        ,%(gender)s        ,%(gym)s        ,%(avg_age)s        ,%(solicitation_flg)s        ,%(stray_flg)s        ,%(main_place)s        ,%(member_num)s        ,%(c_comment)s        ,%(u_comment)s        ,%(register_dt)s        ,%(update_time)s     ) ON DUPLICATE KEY UPDATE         team_name = %(team_name)s        ,team_image = %(team_image)s        ,prefecture_id = %(prefecture_id)s        ,city_id = %(city_id)s        ,line_id = %(line_id)s        ,station_id = %(station_id)s        ,gender = %(gender)s        ,gym = %(gym)s        ,avg_age = %(avg_age)s        ,solicitation_flg = %(solicitation_flg)s        ,stray_flg = %(stray_flg)s        ,main_place = %(main_place)s        ,member_num = %(member_num)s        ,c_comment = %(c_comment)s        ,u_comment = %(u_comment)s        ,update_time = %(update_time)s'''set_t_week = 'INSERT INTO t_week ( team_id, week_id, time_id, register_dt, update_time ) VALUES ( %s, %s, %s, %s, %s)'set_t_challenge = '''    INSERT INTO t_challenge (        challenge_id        ,send_team_id        ,game_date        ,game_time_start        ,team_id        ,challenge_status        ,register_dt        ,update_time    ) VALUES (        %(challenge_id)s        ,%(send_team_id)s        ,%(game_date)s        ,%(game_time_start)s        ,%(team_id)s        ,%(challenge_status)s        ,%(register_dt)s        ,%(update_time)s    )    ON DUPLICATE KEY UPDATE      challenge_status = %(challenge_status)s     ,update_time = %(update_time)s'''update_t_challenge = '''    UPDATE         t_challenge     SET         challenge_status = %(challenge_status)s        ,update_time = %(update_time)s    WHERE         challenge_id = %(challenge_id)s;'''set_t_feature = '''    INSERT INTO t_feature (        team_id        ,feature_id        ,register_dt    ) VALUES (        %(team_id)s        ,%(feature_id)s        ,%(register_dt)s    )'''set_t_message_log = '''    INSERT INTO challenge_chat_log (        challenge_id        , log_no        , send_team_id        , message        , register_dt        , update_time    ) VALUES (        %(challenge_id)s        ,%(log_no)s        ,%(send_team_id)s        ,%(message)s        ,%(register_dt)s        ,%(update_time)s    )'''set_t_purpose = '''    INSERT INTO t_purpose (        team_id        ,purpose_id        ,register_dt        ,update_time    ) VALUES (        %(team_id)s        ,%(purpose_id)s        ,%(register_dt)s        ,%(update_time)s    )'''set_t_member_level = '''    INSERT INTO t_member_level (        team_id        ,mem_level_id        ,mem_num        ,register_dt        ,update_time    ) VALUES (        %(team_id)s        ,%(mem_level_id)s        ,%(mem_num)s        ,%(register_dt)s        ,%(update_time)s    )'''set_t_game_date = '''    INSERT INTO t_game_date (        team_id        ,game_date        ,game_time_start        ,game_time_end        ,comment        ,register_dt        ,update_time    ) VALUES (        %(team_id)s        ,%(game_date)s        ,%(game_time_start)s        ,%(game_time_end)s        ,%(comment)s        ,%(register_dt)s        ,%(update_time)s    )'''get_challenge = '''    select        A.team_id,        tgd.game_date,        tgd.game_time_start,        tgd.game_time_end,        tgd.comment,        A.challenge_id,        A.challenge_status,        A.send_team_id,        CASE            WHEN A.challenge_status = 1 THEN "MATCH"            WHEN A.team_id = %(team_id)s THEN "RES"            WHEN A.send_team_id = %(team_id)s THEN "SEND"            ELSE "NONE"        END as exec_type    from t_challenge AS A    inner join t_game_date AS tgd        on A.game_date = tgd.game_date        AND A.game_time_start = tgd.game_time_start    where  A.team_id = %(team_id)s '''get_challenge_chat_log = '''SELECT    challenge_id    , log_no    , send_team_id    , message    , update_timeFROM    challenge_chat_logWHERE    challenge_id = %sORDER BY    log_no'''set_user_info = '''    INSERT INTO user_info (        user_id         ,user_name        ,password        ,icon        ,sign_in_time        ,ex_year        ,birth_dt        ,height        ,prefecture_id        ,city_id        ,gender        ,comment        ,register_dt        ,update_time    )    VALUES (        %(user_id)s         ,%(user_name)s        ,%(password)s        ,%(icon)s        ,%(sign_in_time)s        ,%(ex_year)s        ,%(birth_dt)s        ,%(height)s        ,%(prefecture_id)s        ,%(city_id)s        ,%(gender)s        ,%(comment)s        ,%(register_dt)s        ,%(update_time)s    )    ON DUPLICATE KEY UPDATE          birth_dt = %(birth_dt)s         ,ex_year = %(ex_year)s         ,height = %(height)s         ,icon = %(icon)s         ,comment = %(comment)s          ,user_name = %(user_name)s         ,prefecture_id = %(prefecture_id)s         ,city_id = %(city_id)s         ,gender = %(gender)s         ,update_time = %(update_time)s'''# where句をteam_idからuser_idへ変更update_user_pass = '''UPDATE user_info SET    password = %(password)s    ,update_time = %(update_time)sWHERE    user_id = %(user_id)s'''update_user_sign_in = '''UPDATE INTO user_info SET    sign_in_time = %(sign_in_time)s    ,update_time = %(update_time)sWHERE    user_id = %(user_id)s'''set_u_week = '''    INSERT INTO u_week (        user_id        , week_id        , time_id        , register_dt        , update_time    ) VALUES (        %(user_id)s        ,%(week_id)s        ,%(time_id)s        ,%(register_dt)s        ,%(update_time)s    )'''set_u_ex = '''    INSERT INTO u_ex_width (        user_id        , width_id        , register_dt    ) VALUES (        %(user_id)s        ,%(width_id)s        ,%(register_dt)s    )'''set_u_position = '''    INSERT INTO u_position (        user_id        , position_id        , register_dt    ) VALUES (        %(user_id)s        ,%(position_id)s        ,%(register_dt)s    )'''check_user_id = '''select user_id, password from user_info where user_id = %(user_id)s'''check_team_id = '''select team_id from team_info where team_id = %(team_id)s'''add_team_user = '''INSERT INTO add_team (    team_id    ,user_id    ,message    ,status    ,register_dt    ) VALUES (    %(team_id)s    ,%(user_id)s    ,%(message)s    ,%(status)s    ,%(register_dt)s    ) ON DUPLICATE KEY UPDATE      status = %(status)s'''check_favorite_team = '''INSERT INTO u_favorite (    ,user_id    ,team_id    ,register_dt    ,update_time) VALUES (    ,%(user_id)s    ,%(team_id)s    ,%(register_dt)s    ,%(update_time)s)'''get_t_game_date = '''  SELECT        A.team_id,        A.game_date,        A.game_time_start,        A.game_time_end,        c.challenge_id,        A.comment,        A.game_status,        c.challenge_status,        c.send_team_id,    CASE        WHEN c.challenge_status = 1 THEN "MATCH"        WHEN c.team_id = %(team_id)s THEN "RES"        WHEN c.send_team_id = %(team_id)s THEN "SEND"        ELSE "NONE"    END as exec_type    FROM        t_game_date AS A    LEFT OUTER JOIN t_challenge AS c        ON (            A.team_id = c.team_id            AND A.game_date = c.game_date            AND A.game_time_start = c.game_time_start        ) OR (            A.team_id = c.send_team_id            AND A.game_date = c.game_date            AND A.game_time_start = c.game_time_start        )        '''get_t_week = '''select team_id, week_id, time_id from t_week'''get_t_feature = '''select A.team_id, A.feature_id from t_feature AS A'''get_t_purpose = '''select A.team_id, A.purpose_id from t_purpose as A'''get_u_position = '''select user_id, position_id from u_position where user_id = %(user_id)s'''get_u_ex = '''select user_id, width_id from u_ex_width where user_id = %(user_id)s'''set_chat_log = '''INSERT INTO challenge_chat_log  ( challenge_id    ,log_no    ,send_team_id    ,send_user_id    ,message    ,register_dt    ,update_time  ) SELECT  %(challenge_id)s  ,IFNULL(MAX(log_no) + 1,1)  ,%(send_team_id)s  ,%(send_user_id)s  ,%(message)s  ,%(register_dt)s  ,%(update_time)s  FROM challenge_chat_log  WHERE challenge_id = %(challenge_id)s'''get_chat_log = '''    SELECT c.log_no, c.send_team_id, u.user_name, c.message     FROM challenge_chat_log as c    INNER JOIN user_info as u     on u.user_id = c.send_user_id    WHERE challenge_id = %(challenge_id)s     ORDER BY log_no ASC'''get_team_profile = '''SELECTt.team_id,t.team_name,t.team_image,t.prefecture_id,t.admin,t.city_id,t.line_id,t.station_id,t.avg_age,t.gym,t.solicitation_flg,t.stray_flg,t.main_place,t.member_num,t.gender,t.c_comment,t.u_commentFROM team_profile as tINNER JOIN team_info as i ON t.team_id = i.team_idWHERE i.team_id =  %(team_id)sAND i.user_id =  %(user_id)s'''